"""Add table for activity group, task and worktype mapping

Revision ID: c38807d82d98
Revises: a1282016fd0c
Create Date: 2025-06-09 12:30:28.000132

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision = "c38807d82d98"
down_revision = "2d8cfb4c422f"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if table exists before creating
    conn = op.get_bind()
    inspector = sa.inspect(conn)

    if not inspector.has_table("activity_worktype_settings"):
        op.create_table(
            "activity_worktype_settings",
            sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
            sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
            sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
            sa.Column(
                "library_activity_group_id",
                sqlmodel.sql.sqltypes.GUID(),
                nullable=False,
            ),
            sa.Column("work_type_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
            sa.Column("alias", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
            sa.Column("disabled_at", sa.DateTime(timezone=True), nullable=True),
            sa.ForeignKeyConstraint(
                ["library_activity_group_id"],
                ["library_activity_groups.id"],
            ),
            sa.ForeignKeyConstraint(
                ["work_type_id"],
                ["work_types.id"],
            ),
            sa.PrimaryKeyConstraint("id"),
            sa.UniqueConstraint(
                "library_activity_group_id",
                "work_type_id",
                name="unique_activity_worktype",
            ),
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if table exists before dropping
    conn = op.get_bind()
    inspector = sa.inspect(conn)

    if inspector.has_table("activity_worktype_settings"):
        op.drop_table("activity_worktype_settings")
    # ### end Alembic commands ###
