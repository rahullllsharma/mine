"""migrate id under worktypes in ebo forms

Revision ID: 9251d3b606c8
Revises: a0ed35f7da8e
Create Date: 2024-03-05 14:45:06.068941

"""
import json

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "9251d3b606c8"
down_revision = "a0ed35f7da8e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()
    work_type_query = """
    SELECT id,name from public.work_types;
    """

    sql = sa.text(work_type_query)
    rows = connection.execute(sql)

    work_types_id_map = dict()
    for row in rows:
        work_types_id_map[row.name] = row.id

    ebo_query = """
    SELECT id,contents
    FROM public.energy_based_observations;
    """

    sql = sa.text(ebo_query)
    rows = connection.execute(sql)

    for row in rows:
        details: list = row.contents.get("details")
        if details:
            work_types = details.get("work_type")
            if work_types:
                i = 0
                length = len(work_types)
                while i < length:
                    work_type = work_types[i]
                    if not work_type.get("id") and work_type.get("name"):
                        work_type_id = work_types_id_map.get(work_type.get("name"))
                        if work_type_id:
                            work_type["id"] = str(work_type_id)
                        else:
                            work_types.pop(i)
                            i = i - 1
                    i = i + 1
                    length = len(work_types)
                if len(work_types) > 0:
                    row.contents["details"]["work_type"] = work_types
                else:
                    row.contents["details"]["work_type"] = None
            contents = json.dumps(row.contents)
            connection.execute(
                sa.text(
                    "UPDATE public.energy_based_observations SET contents=:contents where id=:id"
                ),
                {"id": row.id, "contents": contents},
            )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Nothing to downgrade as cannot decide which id values were null before applying this migration
    pass
