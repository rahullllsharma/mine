"""added feature_flag and feature_flag_log tables

Revision ID: 46a64fb28319
Revises: f6162f29f8c9
Create Date: 2023-11-08 10:29:11.188601

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

from worker_safety_service.models.utils import EnumValues

# revision identifiers, used by Alembic.
revision = "46a64fb28319"
down_revision = "c6ecf3815922"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "feature_flag",
        sa.Column("feature_name", sa.String(), nullable=False),
        sa.Column(
            "configurations", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_feature_flag_feature_name"),
        "feature_flag",
        ["feature_name"],
        unique=True,
    )

    op.create_table(
        "feature_flag_log",
        sa.Column(
            "configurations", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column(
            "log_type",
            EnumValues("CREATE", "UPDATE", name="feature_flag_log_type"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("feature_flag_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["feature_flag_id"],
            ["feature_flag.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("feature_flag_log")
    op.drop_index(op.f("ix_feature_flag_feature_name"), table_name="feature_flag")
    file_status = postgresql.ENUM("CREATE", "UPDATE", name="feature_flag_log_type")
    file_status.drop(op.get_bind())

    op.drop_table("feature_flag")
    # ### end Alembic commands ###
