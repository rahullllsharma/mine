"""added work_type_ids in work_package

Revision ID: 123eb384f8f4
Revises: d81c792da4bf
Create Date: 2024-05-30 11:04:00.338860

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "123eb384f8f4"
down_revision = "d81c792da4bf"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "projects",
        sa.Column(
            "work_type_ids",
            postgresql.ARRAY(postgresql.UUID(as_uuid=True)),
            nullable=True,
        ),
    )

    # Populating work type ids...
    # Create a temporary table to store tenant work types
    op.execute(
        """
    CREATE TEMPORARY TABLE tenant_work_types AS
    SELECT tenant_id, array_agg(id) as work_type_ids
    FROM work_types
    WHERE tenant_id IS NOT NULL AND archived_at IS NULL
    GROUP BY tenant_id
    """
    )

    # Update work_packages with work_type_ids
    op.execute(
        """
    UPDATE projects wp
    SET work_type_ids = twt.work_type_ids
    FROM tenant_work_types twt
    WHERE wp.tenant_id = twt.tenant_id
    """
    )

    # Clean up temporary table
    op.execute("DROP TABLE tenant_work_types")

    # Set a default empty array for any remaining null work_type_ids
    op.execute(
        """
    UPDATE projects
    SET work_type_ids = ARRAY[]::uuid[]
    WHERE work_type_ids IS NULL
    """
    )

    # Add not-null constraint
    op.alter_column(
        "projects",
        "work_type_ids",
        existing_type=postgresql.ARRAY(postgresql.UUID(as_uuid=True)),
        nullable=False,
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("projects", "work_type_ids")
    # ### end Alembic commands ###
