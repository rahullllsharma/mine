"""Update incidents table

Revision ID: c430e1324749
Revises: 00d20b998a94
Create Date: 2022-08-02 08:54:15.987302

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c430e1324749"
down_revision = "00d20b998a94"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "incidents",
        sa.Column(
            "meta_attributes", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
    )
    op.add_column(
        "incidents",
        sa.Column("severity", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column(
        "incidents",
        sa.Column("external_key", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column(
        "incidents", sa.Column("task_id", sqlmodel.sql.sqltypes.GUID(), nullable=True)
    )
    op.execute("ALTER TABLE incidents ALTER COLUMN incident_datetime TYPE date;")
    op.execute(
        "ALTER TABLE incidents RENAME COLUMN incident_datetime to occurred_date;"
    )
    op.execute("ALTER TABLE incidents ALTER COLUMN incident_id DROP NOT NULL")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("incidents", "task_id")
    op.drop_column("incidents", "external_key")
    op.drop_column("incidents", "severity")
    op.drop_column("incidents", "meta_attributes")
    op.execute(
        "ALTER TABLE incidents RENAME COLUMN occurred_date to incident_datetime;"
    )
    op.execute(
        "ALTER TABLE incidents ALTER COLUMN incident_datetime TYPE timestamp without time zone;"
    )
    op.execute("ALTER TABLE incidents ALTER COLUMN incident_id SET NOT NULL")
    # ### end Alembic commands ###
