"""Removed unused models from the risk-model

Revision ID: 7445fd3f1868
Revises: 0fb6e9e76950
Create Date: 2022-05-03 17:17:28.543433

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "7445fd3f1868"
down_revision = "eb48316f5828"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("rm_surface_total_task_task_specific_risk_ranking")
    op.drop_table("rm_surface_project_project_location_risk_scores")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "rm_surface_project_project_location_risk_scores",
        sa.Column(
            "calculated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "value",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("project_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "project_location_id", postgresql.UUID(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "inputs",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "params",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
            name="rm_surface_project_project_location_risk_scores_project_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["project_location_id"],
            ["project_locations.id"],
            name="rm_surface_project_project_location_ri_project_location_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "calculated_at", name="rm_surface_project_project_location_risk_scores_pkey"
        ),
    )
    op.create_table(
        "rm_surface_total_task_task_specific_risk_ranking",
        sa.Column(
            "calculated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "value",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("project_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "project_task_id", postgresql.UUID(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "inputs",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "params",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
            name="rm_surface_total_task_task_specific_risk_rankin_project_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["project_task_id"],
            ["project_location_tasks.id"],
            name="rm_surface_total_task_task_specific_risk_r_project_task_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "calculated_at",
            name="rm_surface_total_task_task_specific_risk_ranking_pkey",
        ),
    )
    # ### end Alembic commands ###
