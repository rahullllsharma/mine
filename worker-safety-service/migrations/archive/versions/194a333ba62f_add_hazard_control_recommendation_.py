"""add hazard control settings

Revision ID: 194a333ba62f
Revises: 9fa3ceb5dfac
Create Date: 2023-01-28 10:54:51.453752

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "194a333ba62f"
down_revision = "9fa3ceb5dfac"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "location_hazard_control_settings",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("location_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("library_hazard_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("library_control_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("tenant_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("disabled", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["library_control_id"],
            ["library_controls.id"],
        ),
        sa.ForeignKeyConstraint(
            ["library_hazard_id"],
            ["library_hazards.id"],
        ),
        sa.ForeignKeyConstraint(
            ["location_id"],
            ["project_locations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenants.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "location_hazard_control_settings_lhc_uk",
        "location_hazard_control_settings",
        ["location_id", "library_hazard_id", "library_control_id"],
        unique=True,
    )
    op.alter_column(
        "project_locations",
        "tenant_id",
        existing_type=postgresql.UUID(),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "project_locations", "tenant_id", existing_type=postgresql.UUID(), nullable=True
    )
    op.drop_index(
        "location_hazard_control_settings_lhc_uk",
        table_name="location_hazard_control_settings",
    )
    op.drop_table("location_hazard_control_settings")
    # ### end Alembic commands ###
