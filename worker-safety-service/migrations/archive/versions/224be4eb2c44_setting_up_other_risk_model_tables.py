"""setting up other risk model tables

Revision ID: 224be4eb2c44
Revises: 5b4ef1424f58
Create Date: 2022-01-31 17:32:00.276058

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision = "224be4eb2c44"
down_revision = "5b4ef1424f58"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "rm_project_site_conditions_multiplier",
        sa.Column("calculated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("tenant", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("project_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("calculated_at"),
    )
    op.create_table(
        "rm_total_project_risk_score",
        sa.Column("calculated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("tenant", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("project_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("calculated_at"),
    )
    op.create_table(
        "rm_total_task_risk_score",
        sa.Column("calculated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("tenant", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("project_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("calculated_at"),
    )
    op.create_table(
        "rm_manually_added_site_conditions",
        sa.Column("calculated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("tenant", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("project_location_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_location_id"],
            ["project_locations.id"],
        ),
        sa.PrimaryKeyConstraint("calculated_at"),
    )
    op.create_table(
        "rm_surface_project_project_location_risk_scores",
        sa.Column("calculated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("tenant", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("project_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("project_location_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_location_id"],
            ["project_locations.id"],
        ),
        sa.PrimaryKeyConstraint("calculated_at"),
    )
    op.create_table(
        "rm_total_project_location_risk_score",
        sa.Column("calculated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("tenant", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("project_location_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_location_id"],
            ["project_locations.id"],
        ),
        sa.PrimaryKeyConstraint("calculated_at"),
    )
    op.create_table(
        "rm_surface_total_task_task_specific_risk_ranking",
        sa.Column("calculated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("tenant", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("project_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("project_task_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_task_id"],
            ["project_location_tasks.id"],
        ),
        sa.PrimaryKeyConstraint("calculated_at"),
    )
    op.create_table(
        "rm_task_specific_risk_score",
        sa.Column("calculated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("tenant", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("project_task_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_task_id"],
            ["project_location_tasks.id"],
        ),
        sa.PrimaryKeyConstraint("calculated_at"),
    )
    op.create_table(
        "rm_task_specific_safety_climate_multiplier",
        sa.Column("calculated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("tenant", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("project_task_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_task_id"],
            ["project_location_tasks.id"],
        ),
        sa.PrimaryKeyConstraint("calculated_at"),
    )
    op.create_table(
        "rm_task_specific_site_conditions_multiplier",
        sa.Column("calculated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("tenant", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("project_task_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_task_id"],
            ["project_location_tasks.id"],
        ),
        sa.PrimaryKeyConstraint("calculated_at"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("rm_task_specific_site_conditions_multiplier")
    op.drop_table("rm_task_specific_safety_climate_multiplier")
    op.drop_table("rm_task_specific_risk_score")
    op.drop_table("rm_surface_total_task_task_specific_risk_ranking")
    op.drop_table("rm_total_project_location_risk_score")
    op.drop_table("rm_surface_project_project_location_risk_scores")
    op.drop_table("rm_manually_added_site_conditions")
    op.drop_table("rm_total_task_risk_score")
    op.drop_table("rm_total_project_risk_score")
    op.drop_table("rm_project_site_conditions_multiplier")
    # ### end Alembic commands ###
