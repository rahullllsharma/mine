"""add ContractorProjectExecutionModel

Revision ID: 64d4da7c96a5
Revises: 747ea3663220
Create Date: 2022-01-19 19:35:31.813879

"""

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy import column, delete, insert, table, text

# revision identifiers, used by Alembic.
revision = "64d4da7c96a5"
down_revision = "747ea3663220"
branch_labels = None
depends_on = None

config_table_name = "rm_calc_parameters"

data = [
    ("contractor_project_execution_cph_weight_low", "0"),
    ("contractor_project_execution_cph_weight_high", "1"),
    ("contractor_project_execution_exp_factor_1", "1"),
    ("contractor_project_execution_exp_factor_2", "0.5"),
    ("contractor_project_execution_exp_factor_n", "0"),
]


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "rm_contractor_project_execution",
        sa.Column("calculated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("contractor_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.PrimaryKeyConstraint("calculated_at", "contractor_id"),
    )

    # Add values to the params
    for n, v in data:
        op.execute(
            insert(table(config_table_name, column("name"), column("value"))).values(
                name=n, value=v
            )
        )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("rm_contractor_project_execution")

    # Remove defaults
    for name, value in data:
        op.execute(
            delete(table(config_table_name))
            .where(column("name") == name)
            .where(text("tenant IS NULL"))
        )
    # ### end Alembic commands ###
